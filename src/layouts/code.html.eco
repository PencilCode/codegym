---
layout: framed
---

<div style="position:fixed;top:0;left:0;right:0;bottom:0;">

<div id="instructions" class="carousel slide" data-interval="false">
  <div class="carousel-inner">
    <div class="item active">
      <div class="instruction container-margins">
        <h2><%= @document.title %> <small><%= @document.subtitle %></small></h2>
        <p><%- @document.mission %>
      </div>
    </div>
    <% if @document.instructions then for inst in @document.instructions: %>
    <div class="item">
      <div class="instruction container">
        <h2><%= inst.title %> <small><%= inst.subtitle %></small></h1>
        <p><%- inst.mission %>
      </div>
    </div>
    <% end %>
  </div>
  <a class="left carousel-control" href="#instructions" style="display:none" data-slide="prev"><span class="glyphicon glyphicon-chevron-left" style="left:5px"></span></a>
  <a class="right carousel-control" href="#instructions" data-slide="next"><span class="glyphicon glyphicon-chevron-right" style="right:5px;left:inherit"></span></a>

<% if @document.instructions: %>
<div id="more" class="btn btn-default topright">More Ideas&nbsp;
<span class="glyphicon glyphicon-circle-arrow-right"></span></div>
<% end %>
</div>

<% if @document.teaser : %>
<xmp id="teaser" class="data"><%- @document.teaser %></xmp>
<% end %>

<xmp id="starter" class="data"><%- @document.code %></xmp>
<xmp id="hint" class="data"><%- @document.hint %></xmp>

<div id="codeframe" class="container-margins" style="flex-grow:1">
</div>

<center class="container-margins reflinks">
<% if @document.teaser : %>
<div id="intro" title="Show hint again" class="btn btn-default pull-left gap-right"><span class="glyphicon glyphicon-repeat"></span></div>
<% end %>
<div id="reset" title="Reset code to original" class="btn btn-default pull-left gap-right">Reset</div>
<% if not @document.refs: %>
<span class="btn">&nbsp;</span>
<% end %>
<% if @document.refs: %>
<span class="btn"><a target="reference" style="color:inherit;text-decoration:inherit" href="/ref/reference.html">Reference:&nbsp;</a></span>
<div id="blocks" title="Toggle Code and Blocks" class="btn btn-default pull-right"><span class="glyphicon glyphicon-indent-left"></span></div>
<div id="share" title="Share on Gymstage" class="btn btn-default pull-right gap-right"><span class="glyphicon glyphicon-cloud-upload"></span></div>
<div id="save" title="Save to Pencil Code" class="btn btn-default pull-right gap-right"><span class="pencil-icon"></span></div>
<% for ref in (@document.refs or []): %><a target="reference" class="btn btn-default gap-right" href="/ref/<%= ref.replace(/\s/g, '_') %>.html"><%=ref%></a><% end %>
<% end %>
</center>
</div>

</div> <!-- end flex container -->
<xmp id="setupcode" style="display:none">
# common setup code here.
window.print = ->
  write 'Try using <b>write</b> instead of <b>print</b>.'
# remove default error handling UI.
window.removeEventListener 'error', see
thepopup = null
popup = (t) ->
  if $('#error-advice').length
    thepopup = $('#error-advice')
  if thepopup
    thepopup.html t
    return
  thepopup = write """
    <center>#{t}</center>
  """
  thepopup.css
    background: rgba(240,240,240,0.8)
    fontFamily: 'Arial'
    margin: '5px 15%'
    padding: '8px'
    borderRadius: '8px'
    boxShadow: '0 0 5px dimgray'

hints = null
lasterrorevent = null

$(window).on 'error', (e) ->
  lasterrorevent = e
  if hints then do hints

<%- @content %>
</xmp>
</article>
<script src="//pencilcode.net/lib/pencilcodeembed.js"></script>
<script>

function fixbase() {
  if (!window.$) return; // skip if jquery is undefined.
  if ($('base').length == 0) {
    $(document.head).append('<base>');
  }
  $('base').attr('href', "BASEURL");
}
var fixbasescript =
  fixbase.toString().replace('BASEURL', location.href) + "\nfixbase();";

$('.carousel').carousel();
function updatePagers() {
  var self = $(this);
  self.children('.carousel-control').show();
  if ($('.carousel-inner .item:first').hasClass('active')) {
    self.children('.left.carousel-control').hide();
  }
  if ($('.carousel-inner .item:last').hasClass('active')) {
    self.children('.right.carousel-control').hide();
  }
}
$('#instructions').each(updatePagers).on('slid', '', updatePagers);

function storageName() {
  return 'gym:' + location.pathname;
}

function loadStorage() {
  try {
    return localStorage.getItem(storageName()) || null;
  } catch (e) {
    return null;
  }
}

function saveStorage(c) {
  try {
    if (!c) {
      localStorage.removeItem();
    } else {
      localStorage.setItem(storageName(), c);
    }
  } catch (e) { }
}

var cf = document.getElementById('codeframe'),
    starter = document.getElementById('starter'),
    originalCode = starter.textContent,
    code = loadStorage() || originalCode,
    modified = (code.trim() != originalCode.trim()),
    setup = document.getElementById('setupcode').innerHTML,
    pce = new PencilCodeEmbed(cf);

pce.on('update', function(c) {
  $('#reset').toggleClass('btn-highlight', (c.trim() != originalCode.trim()));
  saveStorage(c);
  updateShareButton(c);
});

var mode = '';
<% if @document.mode: %>
mode = "<%= @document.mode %>";
<% end %>

if (navigator.userAgent.indexOf('Trident') != -1) {
  pce.on('load', function() {
    pce.setupScript([
      {code: fixbasescript, type: 'text/javascript'},
      {code: setup, type: 'text/coffeescript'}
    ]);
    pce.setCode(code);
  });
  pce.beginLoad({mode:mode});
} else {
  // Using the url for all initialization is less buggy, if supported
  // URLs are long enough.
  pce.beginLoad({code: code, mode: mode, setup: [
    {code: fixbasescript, type: 'text/javascript'},
    {code: setup, type: 'text/coffeescript'}
  ]});
}

var blockMode = true;
$('#blocks').click(function() {
  blockMode = !blockMode;
  pce.setBlockMode(blockMode);
});

$('#more').click(function() { $('#instructions').carousel('next'); });
$('#reset').click(function() {
  pce.setCode(originalCode);
});

function doresize() {
  $('#codeframe').height(
    $(window).height() -
    $('#instructions').outerHeight() -
    $('.reflinks').outerHeight());
}

var sharedCode = null;
var sharedUrl = null;

function updateShareButton(c) {
  if ((c == sharedCode) != /ok/.test($('#share span').attr('class'))) {
    $('#share span').attr('class', (c == sharedCode) ?
       'glyphicon glyphicon-ok' : 'glyphicon glyphicon-cloud-upload');
    if (c == sharedCode) {
      $('#share').tooltip({
        title: "View Shared Page",
      });
      $('#share').tooltip('show');
    } else {
      $('#share').tooltip({
        title: "Share on Gymstage",
      });
    }
  }
}

$('#share').click(function() {
  var name, prefix, payload, code;
  code = pce.getCode();
  if (code == sharedCode && sharedUrl) {
    window.open(sharedUrl);
    return;
  }
  name = prompt(
    'To share your creation, give it a short name.\n' +
    'It will be posted with everybody else\'s shared ' +
    'projects on gymstage.pencilcode.net.\n' +
    'Make the name distinctive so you can find it.',
    defaultname);
  name = name.replace(/\W+/g, '_').replace(/^_+|_+$/g, '');
  if (!name) {
    return;
  }
  prefix = (60466175 -
      (Math.floor((new Date).getTime()/1000) % (24*60*60*500))).toString(36);
  name = prefix + "-" + name;
  payload = {
    data: code,
    key: 943
  }
  $.ajax({
    url: 'http://gymstage.pencilcode.net/save/' + name,
    data: payload,
    dataType: 'json',
    type: 'GET',
    success: function(m) {
      if (m.error) {
        alert('error: ' + m.error);
      } else {
        sharedCode = code;
        sharedUrl ='http://gymstage.pencilcode.net/home/' + name;
        updateShareButton(pce.getCode());
      }
    }
  });
});


var defaultname = window.location.pathname.replace(/^.*\/|\.[^\/\.]*$/g, '') +
  (mode ? "." + mode : "");

$('#save').click(function() {
  $('#tlayer').hide();
  pce.save(defaultname);
});

$('.btn[title]').tooltip();

doresize();
$(window).resize(doresize);

if ($('#teaser').length) {
  $(cf).append('<div id="tlayer"></div>');
  var hint_contents =
    '<!doctype html>\n' +
    '<html><base href="' + location.href + '">\n' +
    '<body><script src="http://pencilcode.net/turtlebits.js" ' +
    'crossorigin="anonymous"><\x2fscript><script type="text/coffeescript">' +
    $(teaser).text() + '<\x2fscript></body></html>';
  function runteaser() {
    $('#tlayer').html('<iframe class="teaser" id="tframe"></iframe>' +
      '<div title="close the example" data-placement="left" ' +
        'class="closebox glyphicon glyphicon-remove-circle"></div>');
    $('#tframe')[0].contentWindow.location.href = 'about:blank';
    $('#tframe')[0].contentWindow.document.open();
    $('#tframe')[0].contentWindow.document.write(hint_contents);
    $('#tframe')[0].contentWindow.document.close();
    $('#tlayer .closebox').tooltip().click(function() {
      $('#tlayer').fadeOut();
    });
  }
  if (modified) {
    $('#tlayer').hide();
  } else {
    runteaser();
  }
  $('#intro').click(function() {
    $('#tlayer').show();
    runteaser();
  });
  setTimeout(function() {
    if ($('#tlayer').is(':visible')) {
      $('#tlayer .closebox').tooltip('show');
    }
  }, <%- @document.teasersecs || 20 %> * 1000);
}

</script>
